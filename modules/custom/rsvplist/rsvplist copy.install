<?php
/**
 * @file
 * Install, Update and uninstall functions for the rsvplist module
 */


function rsvplist_schema(){
  // create database table called 'rsvplist' with the following columns:
  // 1) id [serial], 2) uid [int] 3) nid [int], 4) mail [varchar], 5) created [int]
  $schema['rsvplist'] = [
    'description' => 'Stores email, timestamp, nid and uid for and RSVP.',
    'fields' => [
      'id' => [
        'description' => 'The primary identifier for the record',
        'type' => 'serial',
        'size' =>'small',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'uid' => [
        'description' => 'The {users}.uid that added this RSVP',
        'type' => 'int',
        'not null' => TRUE,
        'default' =>0,
      ],
      'nid' => [
        'description' => 'The {node}.nid for this RSVP',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' =>0,
      ],
      'mail' => [
        'description' => 'User\'s email address',
        'type' => 'varchar',
        'length' => 64,
        'not null' => FALSE,
        'default' => ''
      ],
      'created' => [
        'description' => 'Timestamp for when RSVP was created.',
        'type' => 'int',
        'length' => 64,
        'not null' => TRUE,
        'default' => 0
      ],
      'primary key' => ['id'],
      'indexes' => [
        'node' => ['nid'],
        'node_USER' => ['nid','uid']
      ]
    ],
  ];
  // Create a database table named 'rsvplist_enabled' with the following fields:
  // 1) nid [int]
  $schema['rsvplist_enabled'] = [
    'description' => 'Tracks whether RSVP is enabled or not for a node',
    'fields' => [
      'nid' => [
        'description' => 'the {node}.nid that has RSVPList enabled',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ]
    ],
    'primary key' => ['nid']
  ];

  $schema['test_table'] = [
    'description' => 'Stores module data as key/value pairs per user.',
    'fields' => [
      'uid' => [
        'description' => 'The {users}.uid this record affects.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ],
      'module' => [
        'description' => 'The name of the module declaring the variable.',
        'type' => 'varchar_ascii',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ],
      'name' => [
        'description' => 'The identifier of the data.',
        'type' => 'varchar_ascii',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
      ],
      'value' => [
        'description' => 'The value.',
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
      ],
      'serialized' => [
        'description' => 'Whether value is serialized.',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'default' => 0,
      ],
    ],
    'primary key' => [
      'uid',
      'module',
      'name',
    ],
    'indexes' => [
      'module' => [
        'module',
      ],
      'name' => [
        'name',
      ],
    ],
    // For documentation purposes only; foreign keys are not created in the
    // database.
    'foreign keys' => [
      'data_user' => [
        'table' => 'users',
        'columns' => [
          'uid' => 'uid',
        ],
      ],
    ],
  ];

  return $schema;
}