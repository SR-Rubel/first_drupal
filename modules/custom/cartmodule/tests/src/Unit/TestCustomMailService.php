<?php

namespace Drupal\Tests\cartmodule\Unit;

use Drupal\cartmodule\Mail;
use Drupal\Core\Mail\MailManagerInterface;
use Drupal\Core\Messenger\Messenger;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Session\AccountProxyInterface;
use Drupal\Tests\UnitTestCase;
use PHPUnit\Framework\MockObject\MockObject;

class TestCustomMailService extends UnitTestCase{
  protected Mail $mailService;
  protected MailManagerInterface|MockObject $mailManager;
  protected AccountInterface|MockObject $account;
  protected Messenger|MockObject $messenger;

  protected function setUp() :void
  {
    $this->mailManager = $this->createMock(MailManagerInterface::class);
    $this->account = $this->createMock(AccountProxyInterface::class);
    $this->messenger = $this->createMock(Messenger::class);

    $this->mailService = new Mail($this->mailManager, $this->account, $this->messenger);
    parent::setUp(); // TODO: Change the autogenerated stub
  }

  /**
   * @Test
   * @return void
   */
  public function testIsClaasWorking():void
  {
    $params['message'] = "Thanks for placing order. Your order tacking number is ";
    $params['title'] = "Your order has been placed";
    $key = 'order'; // Replace with Your key

    $paramsOutput = $params;
    $paramsOutput['message'] = "hello testUser !. ".$params['message'];

    $this->account->method('getEmail')
      ->willReturn('test@mail.com');
    $this->account->method('getPreferredLangcode')
      ->willReturn('en');
    $this->account->method('getAccountName')
      ->willReturn('testUser');
    $this->mailManager->expects($this->once())
      ->method('mail')
      ->with('cartmodule',$key, 'test@mail.com', 'en', $paramsOutput, NULL, TRUE)
      ->willReturn([]);
    $this->messenger->expects($this->once())
      ->method('addMessage');
    $this->mailService->sendMailToCurrentUser($params, $key);

  }

}
